/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:263: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ts = np.array(ts).T
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:264: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  rb = np.array(rb).T
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:265: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  re = np.array(re).T - 1
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:266: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  qb = np.array(qb).T
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:267: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  qe = np.array(qe).T - 1
0.55user 7.51system 0:16.79elapsed 48%CPU (0avgtext+0avgdata 564980maxresident)k
2865inputs+11outputs (12major+117422minor)pagefaults 0swaps
0.52user 6.84system 0:15.68elapsed 46%CPU (0avgtext+0avgdata 265912maxresident)k
2839inputs+12outputs (12major+57482minor)pagefaults 0swaps
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:263: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ts = np.array(ts).T
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:264: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  rb = np.array(rb).T
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:265: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  re = np.array(re).T - 1
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:266: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  qb = np.array(qb).T
/scratch/cube/tuechler/protein_alignment/../adept/build2/examples/py_examples/py_multigpu_protein:267: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  qe = np.array(qe).T - 1
0.76user 7.88system 0:16.53elapsed 52%CPU (0avgtext+0avgdata 589280maxresident)k
3013inputs+6outputs (12major+123912minor)pagefaults 0swaps
0.68user 7.13system 0:16.22elapsed 48%CPU (0avgtext+0avgdata 266308maxresident)k
2986inputs+1109outputs (12major+67323minor)pagefaults 0swaps
